{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/apollo-client-3-state-management/src/components/MainSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { VisibilityFilter } from \"../models/VisibilityFilter\";\n\nconst MainSection = ({\n  todos,\n  todosCount,\n  completedCount,\n  visibilityFilter,\n  actions\n}) => {\n  _s();\n\n  const [selectFilter, setSelectFilter] = useState(visibilityFilter);\n\n  const handleChangeSelectFilter = e => {\n    const index = e.target.selectedIndex;\n    console.log(e.target[index].value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"check-completed-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todos.completed === completedCount,\n    onChange: actions.completeAllTodos,\n    id: \"check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Completed All\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Todos Count : \", todosCount), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Completed Count: \", completedCount)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visibility-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectFilter.id,\n    onChange: handleChangeSelectFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, Object.values(VisibilityFilter).map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, item.displayName))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"p\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, todo.text))));\n};\n\n_s(MainSection, \"fOKJyHmbvbGFSJNIJxkG2NeCVNs=\");\n\n_c = MainSection;\nconst Toolbar = styled.div``;\n_c2 = Toolbar;\nexport default MainSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainSection\");\n$RefreshReg$(_c2, \"Toolbar\");","map":{"version":3,"sources":["/home/mvt/Desktop/github/apollo-client-3-state-management/src/components/MainSection.jsx"],"names":["React","useState","styled","VisibilityFilter","MainSection","todos","todosCount","completedCount","visibilityFilter","actions","selectFilter","setSelectFilter","handleChangeSelectFilter","e","index","target","selectedIndex","console","log","value","completed","completeAllTodos","id","Object","values","map","item","displayName","todo","text","Toolbar","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,UAFmB;AAGnBC,EAAAA,cAHmB;AAInBC,EAAAA,gBAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMd;AAAA;;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAACO,gBAAD,CAAhD;;AACA,QAAMI,wBAAwB,GAAGC,CAAC,IAAI;AACpC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,aAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACE,MAAF,CAASD,KAAT,EAAgBK,KAA5B;AACD,GAHD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAGd,KAAK,CAACe,SAAN,KAAoBb,cAFhC;AAGE,IAAA,QAAQ,EAAEE,OAAO,CAACY,gBAHpB;AAIE,IAAA,EAAE,EAAC,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBf,UAAnB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBC,cAAtB,CAFF,CAVF,eAcE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAEG,YAAY,CAACY,EAA5B;AAAiC,IAAA,QAAQ,EAAEV,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,MAAM,CAACC,MAAP,CAAcrB,gBAAd,EAAgCsB,GAAhC,CAAoCC,IAAI,iBACvC;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAlB;AAAsB,IAAA,KAAK,EAAEI,IAAI,CAACJ,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCI,IAAI,CAACC,WAA5C,CADD,CADH,CADF,CAdF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,KAAK,CAACoB,GAAN,CAAUG,IAAI,iBACb;AAAG,IAAA,GAAG,EAAEA,IAAI,CAACN,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBM,IAAI,CAACC,IAAvB,CADD,CADH,CAvBF,CADF;AA+BD,CA3CD;;GAAMzB,W;;KAAAA,W;AA6CN,MAAM0B,OAAO,GAAG5B,MAAM,CAAC6B,GAAI,EAA3B;MAAMD,O;AAEN,eAAe1B,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {VisibilityFilter} from \"../models/VisibilityFilter\"\n\n\nconst MainSection = ({\n  todos,\n  todosCount,\n  completedCount,\n  visibilityFilter,\n  actions,\n}) => {\n  const [selectFilter, setSelectFilter] = useState(visibilityFilter)\n  const handleChangeSelectFilter = e => {\n    const index = e.target.selectedIndex ; \n    console.log(e.target[index].value)\n  }\n  return (\n    <section>\n      <Toolbar>\n        <div className=\"check-completed-all\">\n          <input\n            type=\"checkbox\"\n            checked={(todos.completed === completedCount)}\n            onChange={actions.completeAllTodos}\n            id=\"check-all\"\n          />\n          <label htmlFor=\"check-all\">Completed All</label>\n        </div>\n        <div className=\"center\">\n          <h4>Todos Count : {todosCount}</h4>\n          <h4>Completed Count: {completedCount}</h4>\n        </div>\n        <div className=\"visibility-filter\">\n          <select value={selectFilter.id}  onChange={handleChangeSelectFilter}>\n            {Object.values(VisibilityFilter).map(item => (\n              <option key={item.id} value={item.id}>{item.displayName}</option>\n            ))}\n          </select>\n        </div>\n      </Toolbar>\n      <div>\n        {todos.map(todo => (\n          <p key={todo.id}>{todo.text}</p>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nconst Toolbar = styled.div``;\n\nexport default MainSection;\n"]},"metadata":{},"sourceType":"module"}