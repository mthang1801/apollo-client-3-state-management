{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/apollo-client-3-state-management/src/components/MainSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { VisibilityFilter } from \"../models/VisibilityFilter\";\n\nconst MainSection = ({\n  todos,\n  todosCount,\n  completedCount,\n  visibilityFilter,\n  actions\n}) => {\n  _s();\n\n  const [selectFilter, setSelectFilter] = useState(visibilityFilter.id);\n\n  const handleChangeSelectFilter = e => {\n    setSelectFilter(e.target.value);\n  };\n\n  useEffect(() => {\n    switch (selectFilter) {\n      case \"show_completed\":\n        todos = todos.filter(todo => todo.completed);\n\n      case \"show_active\":\n        todos = todos.filter(todo => !todo.completed);\n\n      default:\n        return todos;\n    }\n  }, [selectFilter]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"check-completed-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todos.completed === completedCount,\n    onChange: actions.completeAllTodos,\n    id: \"check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Completed All\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Todos Count : \", todosCount), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Completed Count: \", completedCount)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visibility-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectFilter.id,\n    onChange: handleChangeSelectFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, Object.values(VisibilityFilter).map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, item.displayName))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"p\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, todo.text))));\n};\n\n_s(MainSection, \"oYh0qIJy4LJWFXiWJ0fhI2/P/0w=\");\n\n_c = MainSection;\nconst Toolbar = styled.div``;\n_c2 = Toolbar;\nexport default MainSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainSection\");\n$RefreshReg$(_c2, \"Toolbar\");","map":{"version":3,"sources":["/home/mvt/Desktop/github/apollo-client-3-state-management/src/components/MainSection.jsx"],"names":["React","useState","useEffect","styled","VisibilityFilter","MainSection","todos","todosCount","completedCount","visibilityFilter","actions","selectFilter","setSelectFilter","id","handleChangeSelectFilter","e","target","value","filter","todo","completed","completeAllTodos","Object","values","map","item","displayName","text","Toolbar","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {VisibilityFilter} from \"../models/VisibilityFilter\"\n\n\nconst MainSection = ({\n  todos,\n  todosCount,\n  completedCount,\n  visibilityFilter,\n  actions,\n}) => {\n  const [selectFilter, setSelectFilter] = useState(visibilityFilter.id)\n  const handleChangeSelectFilter = e => {        \n    setSelectFilter(e.target.value);    \n  }\n  useEffect(() => {\n    switch(selectFilter){\n      case \"show_completed\" : todos = todos.filter(todo => todo.completed);\n      case \"show_active\": todos = todos.filter(todo => !todo.completed);\n      default : return todos;\n    }\n  }, [selectFilter])\n  return (\n    <section>\n      <Toolbar>\n        <div className=\"check-completed-all\">\n          <input\n            type=\"checkbox\"\n            checked={(todos.completed === completedCount)}\n            onChange={actions.completeAllTodos}\n            id=\"check-all\"\n          />\n          <label htmlFor=\"check-all\">Completed All</label>\n        </div>\n        <div className=\"center\">\n          <h4>Todos Count : {todosCount}</h4>\n          <h4>Completed Count: {completedCount}</h4>\n        </div>\n        <div className=\"visibility-filter\">\n          <select value={selectFilter.id}  onChange={handleChangeSelectFilter}>\n            {Object.values(VisibilityFilter).map(item => (\n              <option key={item.id} value={item.id}>{item.displayName}</option>\n            ))}\n          </select>\n        </div>\n      </Toolbar>\n      <div>\n        {todos.map(todo => (\n          <p key={todo.id}>{todo.text}</p>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nconst Toolbar = styled.div``;\n\nexport default MainSection;\n"]},"metadata":{},"sourceType":"module"}