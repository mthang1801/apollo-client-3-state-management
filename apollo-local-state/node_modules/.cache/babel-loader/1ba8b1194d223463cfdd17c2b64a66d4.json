{"ast":null,"code":"var _jsxFileName = \"/home/mvt/Desktop/github/apollo-client-3-state-management/src/components/MainSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { VisibilityFilter } from \"../models/VisibilityFilter\";\nimport TodoList from \"./TodoList\";\n\nconst MainSection = ({\n  todos,\n  todosCount,\n  completedCount,\n  visibilityFilter,\n  actions\n}) => {\n  _s();\n\n  const [selectFilter, setSelectFilter] = useState(visibilityFilter.id);\n\n  const handleChangeSelectFilter = e => {\n    setSelectFilter(e.target.value);\n  };\n\n  const handleCompleteAll = () => {\n    if (todos.length === completedCount) {\n      actions.clearCompletedAllTodos();\n    } else {}\n  };\n\n  return /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Todos Count : \", todosCount), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Completed Count: \", completedCount)), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"check-completed-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todos.length === completedCount,\n    onChange: handleCompleteAll,\n    id: \"check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" Completed All\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visibility-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectFilter.id,\n    onChange: handleChangeSelectFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, Object.values(VisibilityFilter).map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, item.displayName))))), /*#__PURE__*/React.createElement(TodoList, {\n    visibilityFilter: selectFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(MainSection, \"TyjVl78iTBhpEK1vqgq+349BXrY=\");\n\n_c = MainSection;\nconst Section = styled.section`\n  padding: 2rem 0;\n  .center{\n    width : 80vw ; \n    margin: auto;\n  }\n  .count{\n    text-align: center;\n  }\n  @media screen and (min-width:768px){\n    .count{\n      display : flex ; \n      justify-content : center;\n      &> *:first-child{\n        margin-right: 2rem;\n      }\n    }\n  }\n  @media screen and(min-width: 992px){\n    width : 90%; \n    max-width : 1280px;    \n  }\n \n`;\n_c2 = Section;\nconst Toolbar = styled.div`\n  display : flex ; \n  justify-content : space-between ; \n  align-items : center;\n  padding : 1rem 0;\n  border-bottom: 1px solid var(--mainBlack);\n  imput, select{\n    padding : 0.5rem;\n  }\n`;\n_c3 = Toolbar;\nexport default MainSection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainSection\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"Toolbar\");","map":{"version":3,"sources":["/home/mvt/Desktop/github/apollo-client-3-state-management/src/components/MainSection.jsx"],"names":["React","useState","useEffect","styled","VisibilityFilter","TodoList","MainSection","todos","todosCount","completedCount","visibilityFilter","actions","selectFilter","setSelectFilter","id","handleChangeSelectFilter","e","target","value","handleCompleteAll","length","clearCompletedAllTodos","Object","values","map","item","displayName","Section","section","Toolbar","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { VisibilityFilter } from \"../models/VisibilityFilter\";\nimport TodoList from \"./TodoList\";\n\nconst MainSection = ({\n  todos,\n  todosCount,\n  completedCount,\n  visibilityFilter,\n  actions,\n}) => {\n  const [selectFilter, setSelectFilter] = useState(visibilityFilter.id);\n  const handleChangeSelectFilter = (e) => {\n    setSelectFilter(e.target.value);\n  };\n\n  const handleCompleteAll= () => {\n    if(todos.length === completedCount){\n      actions.clearCompletedAllTodos();\n    }else{\n\n    }\n  }\n  return (\n    <Section>\n      <div className=\"center\">\n        <div className=\"count\">\n          <h4>Todos Count : {todosCount}</h4>\n          <h4>Completed Count: {completedCount}</h4>\n        </div>\n        <Toolbar>\n          <div className=\"check-completed-all\">\n            <input\n              type=\"checkbox\"\n              checked={todos.length === completedCount}\n              onChange={handleCompleteAll}\n              id=\"check-all\"\n            />\n            <label htmlFor=\"check-all\"> Completed All</label>\n          </div>\n\n          <div className=\"visibility-filter\">\n            <select value={selectFilter.id} onChange={handleChangeSelectFilter}>\n              {Object.values(VisibilityFilter).map((item) => (\n                <option key={item.id} value={item.id}>\n                  {item.displayName}\n                </option>\n              ))}\n            </select>\n          </div>\n        </Toolbar>\n        <TodoList visibilityFilter={selectFilter} />\n      </div>\n    </Section>\n  );\n};\n\nconst Section = styled.section`\n  padding: 2rem 0;\n  .center{\n    width : 80vw ; \n    margin: auto;\n  }\n  .count{\n    text-align: center;\n  }\n  @media screen and (min-width:768px){\n    .count{\n      display : flex ; \n      justify-content : center;\n      &> *:first-child{\n        margin-right: 2rem;\n      }\n    }\n  }\n  @media screen and(min-width: 992px){\n    width : 90%; \n    max-width : 1280px;    \n  }\n \n`;\n\nconst Toolbar = styled.div`\n  display : flex ; \n  justify-content : space-between ; \n  align-items : center;\n  padding : 1rem 0;\n  border-bottom: 1px solid var(--mainBlack);\n  imput, select{\n    padding : 0.5rem;\n  }\n`;\n\nexport default MainSection;\n"]},"metadata":{},"sourceType":"module"}